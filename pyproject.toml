[build-system]
requires = [
  "setuptools>=42",
  "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "django_user_starter"
dynamic = ["version"]
description = "A Django starter script with both Chinese and English versions, auto versioning via semantic-release."
readme = "README.md"
license = "MIT"
keywords = ["django", "starter", "shell"]
authors = [
  { name = "yaninsanity", email = "admin@jl-blog.com" }
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Framework :: Django",
  "Operating System :: OS Independent"
]
dependencies = [
  "Django>=3.2",
  "django-avatar",
  "pillow",
  "django-jazzmin"
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "python-semantic-release>=9.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "pre-commit>=3.0.0"
]

[project.scripts]
django-starter-zh = "django_user_starter.cli:main_zh"
django-starter-en = "django_user_starter.cli:main_en"

[tool.setuptools]
packages = ["django_user_starter"]

[tool.setuptools.dynamic]
version = {attr = "django_user_starter.__version__"}

[tool.semantic_release]
version_variables = ["django_user_starter/_version.py:__version__"]
build_command = "python -m pip install --upgrade setuptools build wheel && python -m build"
major_on_zero = false
upload_to_pypi = true
upload_to_release = true
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "semantic_release.commit_parser:EmojiCommitParser"
logging_use_named_masks = false
remove_dist = false

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=django_user_starter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["django_user_starter"]
omit = [
    "tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
