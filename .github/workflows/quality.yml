name: Code Quality & Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Code formatting check
      run: |
        black --check django_user_starter/ tests/
        isort --check-only django_user_starter/ tests/

    - name: Linting
      run: |
        flake8 django_user_starter/ tests/

    - name: Run tests
      run: |
        pytest

    - name: Security scan (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        pip install safety bandit[toml]
        safety check --short-report
        bandit -r django_user_starter/

    - name: Test build (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        python -m build
        ls -la dist/

    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
