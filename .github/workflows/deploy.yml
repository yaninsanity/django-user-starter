name: Publish Python 🐍 Distribution 📦 to PyPI and TestPyPI

# Trigger on:
#  - pushes to main or dev branches (for snapshot builds)
#  - pushes of version tags (for official releases)
#  - pull requests targeting main or dev for snapshot builds
on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write

jobs:
  # ────────────────────────────────────────────────────────────────
  # BUILD JOB: Build the package and generate a version using setuptools_scm.
  build:
    name: Build Distribution Package
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full Git history (and tags) for accurate versioning

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Build Dependencies
        run: |
          pip install --upgrade build setuptools_scm

      - name: Generate Version from Git Tags
        id: get_version
        run: |
          # On non-tag commits, setuptools_scm produces a snapshot (e.g. 0.1.0.dev123+gabcdef)
          # On a tagged commit, it produces a clean version (e.g. 1.0.0)
          VERSION=$(python -c "import setuptools_scm; print(setuptools_scm.get_version())")
          echo "Computed version: ${VERSION}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build the Package
        run: |
          python -m build
          # The built distributions will be in the dist/ folder.

      - name: Upload Distribution Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # ────────────────────────────────────────────────────────────────
  # PUBLISH SNAPSHOT JOB: Publish a snapshot build to TestPyPI.
  publish_snapshot:
    name: Publish Snapshot to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/dev'
    permissions:
      id-token: write
    steps:
      - name: Download Distribution Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  # ────────────────────────────────────────────────────────────────
  # PUBLISH OFFICIAL JOB: Publish an official release to PyPI.
  # This job now only runs on tag pushes (e.g., v1.0.0).
  publish_official:
    name: Publish Official Release to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
    steps:
      - name: Download Distribution Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
          skip-existing: true

  # ────────────────────────────────────────────────────────────────
  # GITHUB RELEASE JOB: Sign distributions with Sigstore and create a GitHub Release.
  # This job only runs on tag pushes.
  github_release:
    name: Sign Distributions and Create GitHub Release
    needs: publish_official
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write  # Required for creating GitHub Releases
      id-token: write  # Required for Sigstore signing
    steps:
      - name: Download Distribution Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the Distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          # Extract the tag name from the ref (e.g. v1.0.0)
          tag_name=${GITHUB_REF##*/}
          gh release create "$tag_name" --repo "$GITHUB_REPOSITORY" --notes "Release $tag_name"

      - name: Upload Signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          tag_name=${GITHUB_REF##*/}
          gh release upload "$tag_name" dist/** --repo "$GITHUB_REPOSITORY"
