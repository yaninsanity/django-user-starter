name: Publish Python 🐍 Distribution 📦 to PyPI and TestPyPI

# Workflow triggers:
# - On pushes to main or dev branches (for snapshot builds)
# - On pull requests targeting main or dev (for snapshot builds)
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write

jobs:
  # ─────────────────────────────────────────────────────────────
  # SNAPSHOT JOB: For PRs or pushes to the dev branch, build and publish a snapshot to TestPyPI.
  snapshot_build:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/dev'
    name: Build and Publish Snapshot to TestPyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to enable accurate version computation

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Build Dependencies
        run: |
          pip install --upgrade build setuptools_scm

      - name: Build the Package
        run: |
          python -m build
          # Distributions are built into the 'dist/' folder

      - name: Upload Distribution Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish Snapshot to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  # ─────────────────────────────────────────────────────────────
  # OFFICIAL RELEASE JOB: For pushes to the main branch,
  # use python-semantic-release to auto-calculate version bump, create a tag, update changelog, and publish to PyPI.
  semantic_release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Semantic Release and Publish Official Release
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history and tags are required for semantic-release

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          # Install semantic-release and build tools
          pip install --upgrade python-semantic-release build setuptools_scm

      - name: Build the Package
        run: |
          python -m build
          # Build the package to ensure that artifacts exist before publishing

      - name: Run Semantic Release
        env:
          # PYPI_TOKEN is required for uploading to PyPI; set this in your GitHub secrets.
          PYPI_TOKEN: ${{ secrets.PYPI_PASSWORD }}
          # GITHUB_TOKEN is automatically provided by GitHub Actions.
          GITHUB_TOKEN: ${{ github.token}}
        run: |
          # This command will:
          # - Analyze commit messages (following Conventional Commits)
          # - Determine the next version bump (major, minor, or patch)
          # - Create a release commit and push a Git tag (e.g., v1.0.0)
          # - Publish the package to PyPI if a new version is detected.
          semantic-release publish
