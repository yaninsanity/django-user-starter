name: Publish Python üêç Distribution üì¶ to PyPI and TestPyPI

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release (bypass safety checks)'
        required: false
        default: false
        type: boolean
      target_branch:
        description: 'Target branch for release'
        required: false
        default: 'main'
        type: choice
        options:
          - main
          - dev

permissions:
  contents: write
  id-token: write

jobs:
  # SNAPSHOT JOBÔºöÁî®‰∫é dev ÂàÜÊîØÔºàÈ¢ÑÂèëÂ∏ÉÔºå‰∏ä‰º† TestPyPIÔºâ
  snapshot:
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'dev')
    name: Snapshot Release (TestPyPI)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install --upgrade python-semantic-release build setuptools wheel

      - name: Run Semantic Release (Snapshot)
        id: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ github.token }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          prerelease: true
          force: ${{ github.event.inputs.force_release == 'true' }}

      - name: Build package if no release (Snapshot)
        if: steps.release.outputs.released != 'true'
        run: |
          # Create a dev version for TestPyPI
          CURRENT_VERSION=$(python -c "from django_user_starter import __version__; print(__version__)")
          DEV_VERSION="${CURRENT_VERSION}.dev$(date +%Y%m%d%H%M%S)"
          echo "__version__ = \"$DEV_VERSION\"" > django_user_starter/_version.py
          echo "Building dev version: $DEV_VERSION"
          python -m build

      - name: Publish Snapshot to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  # RELEASE JOBÔºöÁî®‰∫é main ÂàÜÊîØÔºàÊ≠£ÂºèÂèëÂ∏ÉÔºå‰∏ä‰º† PyPI Âíå GitHub ReleaseÔºâ
  release:
    if: (github.ref == 'refs/heads/main' && (!contains(github.event.head_commit.message, '[skip-release]') || github.event.inputs.force_release == 'true')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'main')
    name: Official Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install --upgrade python-semantic-release build setuptools wheel

      - name: Run Semantic Release
        id: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ github.token }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          force: ${{ github.event.inputs.force_release == 'true' }}

      - name: Publish to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Create GitHub Release
        if: steps.release.outputs.released == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release.outputs.tag }}
          name: Release ${{ steps.release.outputs.tag }}
          body: "Auto-generated release from semantic-release"
          files: dist/*
